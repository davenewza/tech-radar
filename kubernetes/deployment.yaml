apiVersion: apps/v1
kind: Deployment
metadata:
  name: techradar-deployment
  labels:
    app: techradar-deployment
    version: latest
spec:
  # selector defines how the deployment finds which pods to manage. spec.selector is immutable after creation.
  selector:
    matchLabels:
      app: techradar
  # template describes the pod (i.e. the containers to run on each pod, etc.)
  template:
    metadata:
      labels:
        app: techradar
        version: latest
    spec:
      containers:
      - name: techradar-container
        image: whereismytransport.azurecr.io/techradar:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 26047
        resources:
          requests:
            cpu: 0.05
            memory: 10M
          limits:
            cpu: 0.1
            memory: 100M
  strategy:
    type: Recreate
    rollingUpdate: null
---
apiVersion: v1
kind: Service
metadata:
  name: techradar-service
  labels:
    app: techradar-service
    version: latest
spec:
  type: NodePort
  selector:
    app: techradar
    version: latest
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: techradar-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - techradar.whereismytransport.com
    secretName: techradar-tls-secret
  rules:
  - host: techradar.whereismytransport.com
    http:
      paths:
      - path: /
        backend:
          serviceName: techradar-service
          servicePort: 80